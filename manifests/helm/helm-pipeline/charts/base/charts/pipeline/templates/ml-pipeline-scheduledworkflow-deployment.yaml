apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-scheduledworkflow
    app.kubernetes.io/name: {{ .Values.global.labels.appKubernetesIoName }}
    app.kubernetes.io/component: {{ .Values.global.labels.appKubernetesIoComponent }}
    application-crd-id: {{ .Values.global.labels.applicationCrdId }}
  namespace: {{ .Values.global.namespace }}
  name: ml-pipeline-scheduledworkflow
spec:
  selector:
    matchLabels:
      app: ml-pipeline-scheduledworkflow
      app.kubernetes.io/name: {{ .Values.global.labels.appKubernetesIoName }}
      app.kubernetes.io/component: {{ .Values.global.labels.appKubernetesIoComponent }}
      application-crd-id: {{ .Values.global.labels.applicationCrdId }}
  template:
    metadata:
      labels:
        app: ml-pipeline-scheduledworkflow
        app.kubernetes.io/name: {{ .Values.global.labels.appKubernetesIoName }}
        app.kubernetes.io/component: {{ .Values.global.labels.appKubernetesIoComponent }}
        application-crd-id: {{ .Values.global.labels.applicationCrdId }}
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
      - image: gcr.io/ml-pipeline/scheduledworkflow:dummy
        imagePullPolicy: IfNotPresent
        name: ml-pipeline-scheduledworkflow
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CRON_SCHEDULE_TIMEZONE
            valueFrom:
              configMapKeyRef:
                name: pipeline-install-config
                key: cronScheduleTimezone
      serviceAccountName: ml-pipeline-scheduledworkflow
