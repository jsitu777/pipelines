apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-viewer-crd
    app.kubernetes.io/name: {{ .Values.global.labels.appKubernetesIoName }}
    app.kubernetes.io/component: {{ .Values.global.labels.appKubernetesIoComponent }}
    application-crd-id: {{ .Values.global.labels.applicationCrdId }}
  name: ml-pipeline-viewer-crd
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    matchLabels:
      app: ml-pipeline-viewer-crd
      app.kubernetes.io/name: {{ .Values.global.labels.appKubernetesIoName }}
      app.kubernetes.io/component: {{ .Values.global.labels.appKubernetesIoComponent }}
      application-crd-id: {{ .Values.global.labels.applicationCrdId }}
  template:
    metadata:
      labels:
        app: ml-pipeline-viewer-crd
        app.kubernetes.io/name: {{ .Values.global.labels.appKubernetesIoName }}
        app.kubernetes.io/component: {{ .Values.global.labels.appKubernetesIoComponent }}
        application-crd-id: {{ .Values.global.labels.applicationCrdId }}
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
      - env:
        - name: NAMESPACE
          value: ""
          valueFrom: null   
        - name: MAX_NUM_VIEWERS
          value: "50"
        - name: MINIO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "{{ .Values.viewerCrdController.images.name }}:{{ .Values.viewerCrdController.images.newTag }}"
        imagePullPolicy: Always
        name: ml-pipeline-viewer-crd
      serviceAccountName: ml-pipeline-viewer-crd-service-account
