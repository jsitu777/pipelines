---
# Source: pipeline/charts/metadata-writer/templates/metadata-writer-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeflow-pipelines-metadata-writer
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  namespace: kubeflow
---
# Source: pipeline/templates/container-builder-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeflow-pipelines-container-builder
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
---
# Source: pipeline/templates/ml-pipeline-apiserver-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline
  namespace: kubeflow
---
# Source: pipeline/templates/ml-pipeline-persistenceagent-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-pipeline-persistenceagent
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
---
# Source: pipeline/templates/ml-pipeline-scheduledworkflow-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-pipeline-scheduledworkflow
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
---
# Source: pipeline/templates/ml-pipeline-ui-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-pipeline-ui
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
---
# Source: pipeline/templates/ml-pipeline-viewer-crd-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-pipeline-viewer-crd-service-account
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
---
# Source: pipeline/templates/ml-pipeline-visualization-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-pipeline-visualizationserver
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  namespace: kubeflow
---
# Source: pipeline/templates/pipeline-runner-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline-runner
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
---
# Source: pipeline/templates/viewer-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  namespace: kubeflow
  name: kubeflow-pipelines-viewer
---
# Source: pipeline/templates/kfp-launcher-configmap.yaml
apiVersion: v1
kind: ConfigMap
data:
   defaultPipelineRoot: ""
metadata:
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: kfp-launcher
  namespace: kubeflow
---
# Source: pipeline/templates/ml-pipeline-ui-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-pipeline-ui-configmap
data:
   viewer-pod-template.json:  |-
    {
        "spec": {
            "serviceAccountName": "kubeflow-pipelines-viewer"
        }
    }
---
# Source: pipeline/charts/cluster-scoped/templates/scheduled-workflow-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: scheduledworkflows.kubeflow.org
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
spec:
  group: kubeflow.org
  names:
    kind: ScheduledWorkflow
    listKind: ScheduledWorkflowList
    plural: scheduledworkflows
    singular: scheduledworkflow
    shortNames:
    - swf
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            x-kubernetes-map-type: atomic
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            x-kubernetes-map-type: atomic
        required:
        - spec
        - status
        type: object
    served: true
    storage: true
---
# Source: pipeline/charts/cluster-scoped/templates/viewer-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: viewers.kubeflow.org
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
spec:
  group: kubeflow.org
  names:
    kind: Viewer
    listKind: ViewerList
    plural: viewers
    singular: viewer
    shortNames:
    - vi
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
            x-kubernetes-map-type: atomic
        required:
        - spec
        type: object
    served: true
    storage: true
---
# Source: pipeline/charts/metadata-writer/templates/metadata-writer-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
    app: kubeflow-pipelines-metadata-writer-role
  namespace: kubeflow
  name: kubeflow-pipelines-metadata-writer-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - get
  - list
  - watch
  - update
  - patch
---
# Source: pipeline/templates/ml-pipeline-apiserver-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: ml-pipeline
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline
  namespace: kubeflow
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - list
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - kubeflow.org
  resources:
  - scheduledworkflows
  verbs:
  - create
  - get
  - list
  - update
  - patch
  - delete
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
---
# Source: pipeline/templates/ml-pipeline-persistenceagent-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ml-pipeline-persistenceagent-role
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kubeflow.org
  resources:
  - scheduledworkflows
  verbs:
  - get
  - list
  - watch
---
# Source: pipeline/templates/ml-pipeline-scheduledworkflow-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: ml-pipeline-scheduledworkflow-role
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline-scheduledworkflow-role
  namespace: kubeflow
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - kubeflow.org
  resources:
  - scheduledworkflows
  - scheduledworkflows/finalizers
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: pipeline/templates/ml-pipeline-ui-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: ml-pipeline-ui
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  namespace: kubeflow
  name: ml-pipeline-ui
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - "kubeflow.org"
  resources:
  - viewers
  verbs:
  - create
  - get
  - list
  - watch
  - delete
- apiGroups:
  - "argoproj.io"
  resources:
  - workflows
  verbs:
  - get
  - list
---
# Source: pipeline/templates/ml-pipeline-viewer-crd-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ml-pipeline-viewer-controller-role
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
rules:
- apiGroups:
  - '*'
  resources:
  - deployments
  - services
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - kubeflow.org
  resources:
  - viewers
  - viewers/finalizers
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
---
# Source: pipeline/templates/pipeline-runner-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pipeline-runner
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  - persistentvolumeclaims
  verbs:
  - '*'
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - create
  - delete
  - get
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/log
  - services
  verbs:
  - '*'
- apiGroups:
  - ""
  - apps
  - extensions
  resources:
  - deployments
  - replicasets
  verbs:
  - '*'
- apiGroups:
  - kubeflow.org
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - '*'
- apiGroups:
  - machinelearning.seldon.io
  resources:
  - seldondeployments
  verbs:
  - '*'
---
# Source: pipeline/charts/metadata-writer/templates/metadata-writer-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  namespace: kubeflow
  name: kubeflow-pipelines-metadata-writer-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeflow-pipelines-metadata-writer-role
subjects:
- kind: ServiceAccount
  name: kubeflow-pipelines-metadata-writer
  namespace: kubeflow
---
# Source: pipeline/templates/ml-pipeline-apiserver-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: ml-pipeline
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline
  namespace: kubeflow
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline
subjects:
- kind: ServiceAccount
  name: ml-pipeline
  namespace: kubeflow
---
# Source: pipeline/templates/ml-pipeline-persistenceagent-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ml-pipeline-persistenceagent-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline-persistenceagent-role
subjects:
- kind: ServiceAccount
  name: ml-pipeline-persistenceagent
---
# Source: pipeline/templates/ml-pipeline-scheduledworkflow-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  namespace: kubeflow
  name: ml-pipeline-scheduledworkflow-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline-scheduledworkflow-role
subjects:
- kind: ServiceAccount
  name: ml-pipeline-scheduledworkflow
  namespace: kubeflow
---
# Source: pipeline/templates/ml-pipeline-ui-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: ml-pipeline-ui
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline-ui
subjects:
- kind: ServiceAccount
  name: ml-pipeline-ui
  namespace: kubeflow
---
# Source: pipeline/templates/ml-pipeline-viewer-crd-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ml-pipeline-viewer-crd-binding
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline-viewer-controller-role
subjects:
- kind: ServiceAccount
  name: ml-pipeline-viewer-crd-service-account
  namespace: kubeflow
---
# Source: pipeline/templates/pipeline-runner-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: pipeline-runner-binding
  namespace: kubeflow
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pipeline-runner
subjects:
- kind: ServiceAccount
  name: pipeline-runner
  namespace: kubeflow
---
# Source: pipeline/templates/ml-pipeline-apiserver-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-pipeline
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  annotations:
    prometheus.io/port: "8888"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
spec:
  ports:
  - name: http
    port: 8888
    protocol: TCP
    targetPort: 8888
  - name: grpc
    port: 8887
    protocol: TCP
    targetPort: 8887
  selector:
    app: ml-pipeline
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
---
# Source: pipeline/templates/ml-pipeline-ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ml-pipeline-ui
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline-ui
  namespace: kubeflow
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 3000
  selector:
    app: ml-pipeline-ui
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
---
# Source: pipeline/templates/ml-pipeline-visualization-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ml-pipeline-visualizationserver
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  namespace: kubeflow
spec:
  ports:
  - name: http
    port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    app: ml-pipeline-visualizationserver
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
---
# Source: pipeline/charts/metadata-writer/templates/metadata-writer-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
    app: metadata-writer
  name: metadata-writer
  namespace: kubeflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metadata-writer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeflow-pipelines
        app.kubernetes.io/component: ml-pipeline
        application-crd-id: kubeflow-pipelines
        app: metadata-writer 
    spec:
      containers:
      - name: main
        image: gcr.io/ml-pipeline/metadata-writer:dummy
        env:
        - name: NAMESPACE_TO_WATCH
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      serviceAccountName: kubeflow-pipelines-metadata-writer
---
# Source: pipeline/templates/ml-pipeline-apiserver-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ml-pipeline
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      app: ml-pipeline
      app.kubernetes.io/name: kubeflow-pipelines
      app.kubernetes.io/component: ml-pipeline
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      labels:
        app: ml-pipeline
        app.kubernetes.io/name: kubeflow-pipelines
        app.kubernetes.io/component: ml-pipeline
        application-crd-id: kubeflow-pipelines
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
      - env:
        - name: AUTO_UPDATE_PIPELINE_DEFAULT_VERSION
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: autoUpdatePipelineDefaultVersion
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OBJECTSTORECONFIG_SECURE
          value: "false"
        - name: OBJECTSTORECONFIG_BUCKETNAME
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: bucketName
        - name: DBCONFIG_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: username
        - name: DBCONFIG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        - name: DBCONFIG_DBNAME
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: pipelineDb
        - name: DBCONFIG_HOST
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: dbHost
        - name: DBCONFIG_PORT
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: dbPort
        - name: DBCONFIG_CONMAXLIFETIME
          valueFrom:
            configMapKeyRef:
              name: pipeline-install-config
              key: ConMaxLifeTime
        - name: OBJECTSTORECONFIG_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: mlpipeline-minio-artifact
              key: accesskey
        - name: OBJECTSTORECONFIG_SECRETACCESSKEY
          valueFrom:
            secretKeyRef:
              name: mlpipeline-minio-artifact
              key: secretkey
        image: gcr.io/ml-pipeline/api-server:dummy
        imagePullPolicy: IfNotPresent
        name: ml-pipeline-api-server
        ports:
        - name: http
          containerPort: 8888
        - name: grpc
          containerPort: 8887
        readinessProbe:
          exec:
            command:
              - wget
              - -q # quiet
              - -S # show server response
              - -O
              - "-" # Redirect output to stdout
              - http://localhost:8888/apis/v1beta1/healthz
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
        livenessProbe:
          exec:
            command:
              - wget
              - -q # quiet
              - -S # show server response
              - -O
              - "-" # Redirect output to stdout
              - http://localhost:8888/apis/v1beta1/healthz
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
        resources:
          requests:
            cpu: 250m
            memory: 500Mi
      serviceAccountName: ml-pipeline
---
# Source: pipeline/templates/ml-pipeline-persistenceagent-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-persistenceagent
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline-persistenceagent
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      app: ml-pipeline-persistenceagent
      app.kubernetes.io/name: kubeflow-pipelines
      app.kubernetes.io/component: ml-pipeline
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      labels:
        app: ml-pipeline-persistenceagent
        app.kubernetes.io/name: kubeflow-pipelines
        app.kubernetes.io/component: ml-pipeline
        application-crd-id: kubeflow-pipelines
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
      - env:
          - name: NAMESPACE
            value: 
          - name: TTL_SECONDS_AFTER_WORKFLOW_FINISH
            value: "86400"
          - name: NUM_WORKERS
            value: "2"
        image: "gcr.io/ml-pipeline/persistenceagent:2.0.0-alpha.1"
        imagePullPolicy: IfNotPresent
        name: ml-pipeline-persistenceagent
        resources:
          requests:
            cpu: 120m
            memory: 500Mi
      serviceAccountName: ml-pipeline-persistenceagent
---
# Source: pipeline/templates/ml-pipeline-scheduledworkflow-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-scheduledworkflow
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  namespace: kubeflow
  name: ml-pipeline-scheduledworkflow
spec:
  selector:
    matchLabels:
      app: ml-pipeline-scheduledworkflow
      app.kubernetes.io/name: kubeflow-pipelines
      app.kubernetes.io/component: ml-pipeline
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      labels:
        app: ml-pipeline-scheduledworkflow
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
      - image: gcr.io/ml-pipeline/scheduledworkflow:dummy
        imagePullPolicy: IfNotPresent
        name: ml-pipeline-scheduledworkflow
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CRON_SCHEDULE_TIMEZONE
            valueFrom:
              configMapKeyRef:
                name: pipeline-install-config
                key: cronScheduleTimezone
      serviceAccountName: ml-pipeline-scheduledworkflow
---
# Source: pipeline/templates/ml-pipeline-ui-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-ui
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline-ui
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      app: ml-pipeline-ui
      app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  template:
    metadata:
      labels:
        app: ml-pipeline-ui
        app.kubernetes.io/name: kubeflow-pipelines
        app.kubernetes.io/component: ml-pipeline
        application-crd-id: kubeflow-pipelines
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: ml-pipeline-ui-configmap
      containers:
      - image: gcr.io/ml-pipeline/frontend:dummy
        imagePullPolicy: IfNotPresent
        name: ml-pipeline-ui
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        env:
          - name: VIEWER_TENSORBOARD_POD_TEMPLATE_SPEC_PATH
            value: /etc/config/viewer-pod-template.json
          - name: MINIO_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: mlpipeline-minio-artifact
                key: accesskey
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: mlpipeline-minio-artifact
                key: secretkey
          - name: ALLOW_CUSTOM_VISUALIZATIONS
            value: "true"
        readinessProbe:
          exec:
            command:
              - wget
              - -q # quiet
              - -S # show server response
              - -O
              - "-" # Redirect output to stdout
              - http://localhost:3000/apis/v1beta1/healthz
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
        livenessProbe:
          exec:
            command:
              - wget
              - -q # quiet
              - -S # show server response
              - -O
              - "-" # Redirect output to stdout
              - http://localhost:3000/apis/v1beta1/healthz
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
        resources:
          requests:
            cpu: 10m
            memory: 70Mi
      serviceAccountName: ml-pipeline-ui
---
# Source: pipeline/templates/ml-pipeline-viewer-crd-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-viewer-crd
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline-viewer-crd
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      app: ml-pipeline-viewer-crd
      app.kubernetes.io/name: kubeflow-pipelines
      app.kubernetes.io/component: ml-pipeline
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      labels:
        app: ml-pipeline-viewer-crd
        app.kubernetes.io/name: kubeflow-pipelines
        app.kubernetes.io/component: ml-pipeline
        application-crd-id: kubeflow-pipelines
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
      - env:
        - name: NAMESPACE
          value: ""
          valueFrom: null   
        - name: MAX_NUM_VIEWERS
          value: "50"
        - name: MINIO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "gcr.io/ml-pipeline/viewer-crd-controller:2.0.0-alpha.1"
        imagePullPolicy: Always
        name: ml-pipeline-viewer-crd
      serviceAccountName: ml-pipeline-viewer-crd-service-account
---
# Source: pipeline/templates/ml-pipeline-visualization-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ml-pipeline-visualizationserver
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: ml-pipeline-visualizationserver
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      app: ml-pipeline-visualizationserver
      app.kubernetes.io/name: kubeflow-pipelines
      app.kubernetes.io/component: ml-pipeline
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      labels:
        app: ml-pipeline-visualizationserver
        app.kubernetes.io/name: kubeflow-pipelines
        app.kubernetes.io/component: ml-pipeline
        application-crd-id: kubeflow-pipelines
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      containers:
      - image: gcr.io/ml-pipeline/visualization-server:dummy
        imagePullPolicy: IfNotPresent
        name: ml-pipeline-visualizationserver
        ports:
        - name: http
          containerPort: 8888
        readinessProbe:
          exec:
            command:
              - wget
              - -q # quiet
              - -S # show server response
              - -O
              - "-" # Redirect output to stdout
              - http://localhost:8888/
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
        livenessProbe:
          exec:
            command:
              - wget
              - -q # quiet
              - -S # show server response
              - -O
              - "-" # Redirect output to stdout
              - http://localhost:8888/
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
        resources:
            requests:
              cpu: 30m
              memory: 500Mi
      serviceAccountName: ml-pipeline-visualizationserver
