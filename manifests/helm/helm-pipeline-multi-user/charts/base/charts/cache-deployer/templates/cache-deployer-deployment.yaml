apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache-deployer-deployment
  labels:
    app.kubernetes.io/name: {{ .Values.global.labels.appKubernetesIoName }}
    app.kubernetes.io/component: {{ .Values.global.labels.appKubernetesIoComponent }}
    application-crd-id: {{ .Values.global.labels.applicationCrdId }}
    app: {{ .Values.labels.app }}
  namespace: {{ .Values.global.namespace}}
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.labels.app }}
      app.kubernetes.io/name: {{ .Values.global.labels.appKubernetesIoName }}
      app.kubernetes.io/component: {{ .Values.global.labels.appKubernetesIoComponent }}
      application-crd-id: {{ .Values.global.labels.applicationCrdId }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.labels.app }}
        app.kubernetes.io/name: {{ .Values.global.labels.appKubernetesIoName }}
        app.kubernetes.io/component: {{ .Values.global.labels.appKubernetesIoComponent }}
        application-crd-id: {{ .Values.global.labels.applicationCrdId }}
    spec:
      containers:
      - env:
          - name: NAMESPACE_TO_WATCH
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        image: "{{ .Values.images.name }}:{{ .Values.images.newTag }}" 
        imagePullPolicy: Always
        name: main
      serviceAccountName: kubeflow-pipelines-cache-deployer-sa
      restartPolicy: Always



